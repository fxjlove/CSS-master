清除浮动:
一.为什么要清除浮动
因为父级盒子很多情况下,不方便给高度,但是盒子浮动就不占有位置,最后父级盒子高度为0,就影响饿了下面的标准盒子

总结:
    由于浮动元素不再占有原文档流的位置,所以它会对后面的元素排版产生影响
    准确地说,并不是清除浮动,而是清除浮动后造成的影响

二:清除浮动本质
    清除浮动主要为了解决 父级元素因为子级浮动引起内部高度为0的问题 清除浮动之后,父级就会根据浮动的盒子自动检测高度,父级有了高度,就不会影响下面的标准流了

三:清除浮动的方法
在CSS中,clear属性用于清除浮动,在这里,我们先记住清除浮动的方法,具体的原理,等我们学完css会再回头分析
语法:
    选择器{clear:属性值;} clear清除

    left        不允许左侧有浮动元素(清除左侧浮动的影响)

    right       不允许右侧有浮动元素(清除右侧浮动的影响)

    both        同时清除左右两侧浮动的影响

    但是我们实际工作中,几乎只用clear:both;


清除浮动的方法:
1.额外标签法(隔墙法)
是w3c推荐的做法是通过在浮动元素末尾添加一个空的标签例如<div style="clear:both"></div> 或者其他标签br等亦可
优点:通熟易懂,书写方便
缺点:添加许多无意义的标签,结构比较差

2.父级添加overflow属性方法
可以给父级添加: overflow为 hidden|auto|scroll 都可以实现
优点:代码简洁
缺点:内容增多时容易赵城不会自动换行导致内容被隐藏掉.无法显示需要益处的元素


3.使用after伪元素清除浮动
:alter 方式为空元素额外标签法的升级版,好处是不用单独加标签了
使用方法:
    .clearfix:after {content:"";display:block; height: 0;clear: both; visibility: hidden;}

    .clearfix {*zoom:1;} IE6\7专有

优点:符合闭合浮动思想 结构语义化正确
缺点: 由于IE6-7不支持:after ,使用zoom:1触发hasLayout
代表网站:百度、淘宝网、网易等

4.使用双伪元素清除浮动
使用方法:
.clearfix:befor,.clearfix:after {
    content:"";
    display:table;
}
.clearfix:after {
    clear:both;
}
.clearfix {
    *zoom:1;
}
优点:代码更简洁
缺点:由于IE6-7不支持:after,使用zoom:1 触发hasLayout
代表网站:小米、腾讯等


四.清除浮动总结
什么时候用清除浮动呢?
1.父级没高度
2.子盒子浮动了
3.影响下面布局了,我们就应该清除浮动了

清除浮动的方式               优点                      缺点
额外标签法(隔墙法)           通熟易懂,书写方便            添加许多五意义的变迁,结构化较差
父级overflow:hieedn;       书写简单                   溢出隐藏
父级after伪元素             结构语义化正确              由于IE6-7不支持:after,兼容性问题
父级双伪元素                结构语义化正确              由于IE6-7不支持:after,兼容性问题




后面两种伪元素清除浮动,大家暂且会使用更好