一.元素的显示与隐藏

(一).display显示(重点)
display设置或检索对象是否及如何显示

display: none   隐藏对象

display: block  除了转换为块级元素之外,同时还有显示元素的意思

特点:隐藏之后,不再保留位置

(二).visibility可见性(了解)
设置或检索是否显示对象

visibility: visibile; 对象可视

visibility: hidden; 对象隐藏

特点: 隐藏之后,继续保留原有的位置 (停职留薪)


(三).overflow溢出(重点)
检索或设置当对象的内容超过其指定高度及宽度时如何管理内容
属性值        描述
visibile    不剪切内容也不提那家滚动条

hidden      不显示超过对象尺寸的内容,超出的部分隐藏掉

scroll      不管超出内容否,总是显示滚动条

auto        超出自动显示滚动条,不超出不显示滚动条



显示与隐藏总结
属性             区别                         用途
display         隐藏对象,不保留位置             配合后面js做特效,比如下拉菜单,原先没有,鼠标经过,显示下拉菜单,应用极为广泛

visibility      隐藏对象,保留位置               使用较少

overflow        只是隐藏超出大小的部分          1.可以清除浮动 2.保证盒子里面的内容不会超出该盒子范围



二.CSS用户界面样式
所谓的界面样式,就是更改一些用户操作样式,以便提高更好的用户体验
1.更改用户的鼠标样式(滚动条因为兼容性差,我们不研究)
2.表单轮廓等
3.防止表单域拖拽

(一).鼠标样式cursor
设置或检索在对象上移动的鼠标指针采用何种系统预定以的光标形状
属性值       描述
default     小白 默认
pointer     小手
move        移动
text        文本
not-allowed 禁止

(二).轮廓线outline
是绘制于元素周围的一条线,位于边框边缘的外围,可起到突出元素的作用
outline: outline-color || outline-style || outlin-width
但是我们都不关心可以设置多少,我么平时都是去掉的
最直接的写法是: outline::0; 或者outlin: none;
<input type="text" style="outlin:0;" />


(三).防止拖拽文本域resize
实际开发中,我们文本域右下角是不可以拖拽;
<textarea style="resize: none;"></textarea>



用户界面样式总结
属性        用途                  用途
鼠标样式    更改鼠标样式cursor      样式很多,重点记住pointer

轮廓线      表单默认outline        outline轮廓线,我们一半直接去掉,border是边框,我们会经常用

防止拖拽    主要针对文本域tesize    防止用户随意拖拽文本域,赵成页面布局混乱,我们resize:none;

    
三.vertical-align垂直对齐

有宽度的块级元素居中对齐,是margin:0 auto;
让文字居中对齐,是text-align:center;

vertical-align垂直对齐,它只针对于行内元素或者行内块元素

vertical-align : baseline | top | middle | bottom

设置或检索对象内容的垂直对齐方式
注意:
vertical-align不影响块级元素中的内容对齐,它只针对行内元素或者行内块元素
特别是行内块元素,通常用来控制图片/表单与文字的对齐

模式                                单词
基线对齐: 默认的是文字和图片基线对齐     vertical-align:baseline;

垂直居中: 默认的是文字和图片基线对齐     vertical-align:middle;

顶部对齐: 默认的是文字和图片基线对齐     vertical-align:top;



(一).图片、表单和文字对齐


(二).去除图片底侧空白缝隙
原因:
    图片或者表单等行内块元素,他的底线回纥父级盒子的基线对齐
    就是图片底侧会有一个空白缝隙

解决方法就是:
    1.给img verrical-align:middle | top | bottom 等等,让图片不要和基线对齐

    2.给img 添加diaplay: block;转换为块级元素就不会存在问题了





    
四.溢出的文字省略号显示
(一).white-space

white-space 设置或检索对象内文本显示方式.通常我们使用于强制一行显示内容

white-space: normal;    默认处理方式

white-space: nowrap;    强制在同一行内显示所以文本,直到文本结束或者遭遇br标签对象才换行


(二).text-overflow 文字溢出
设置或检索是否使用一个省略标记(...),标示对象内文本的溢出
text-overflow: clip; 不显示省略标记(...),而是简单的裁切

text-overflow: ellipsis; 当对象哪文本溢出时显示省略标记(...)

注意:一定要首先强制一行内显示,再次和overflow属性 搭配使用


(三).总结三部曲
1.先强制一行内显示文本
    white-space: nowrap;

2.超出的部分隐藏
    overflow: hidden;

3.文字用省略号替代超出的部分
    text-overflow: ellipsis;




    
五.CSS精灵技术(sprite)重点
(一).为什么需要精灵技术

(二).




    
六.滑动门

为了使各种特殊形状的背景能够自适应元素中文本内容的多少,出现了CSS滑动门技术,它从新的角度构建页面,使各种特殊形状的背景能够自由拉伸滑动,以适应元素内部的文本内容,
可用性更强,常见于各种导航栏的滑动门

核心技术:就是利用CSS精灵(主要是北京位置)和 盒子padding撑开宽度,以便能适应不公数字的导航栏
一般的经典布局都是这演的:
<li>
    <a href="#>
        <span>导航栏内容</span>
    </a>
</li>


总结:
1.a 设置 背景左侧, padding撑开合适宽度
2.span 设置 背景右侧  , padding撑开合适宽度,剩下由文字继续撑开宽度
3.之所以a包含span就是因为整个导航都是可以点击的



七.拓展
(一).margin负值之美
1.负边距 + 定位: 水平垂直居中
一个绝对定位的盒子,利用 父级盒子的50%, 然后往左(上)走 自己宽度的一半, 可以实现盒子水平垂直居中

2.压住盒子相邻边框




(二).CSS三角形之美

CSS三角做法如下:
1.用css边框可以模拟三角效果
2.宽度高度为0
3.4个边框都要写,只保留需要的颜色边框,其余的不能省略,都改为transparent透明就好了
4.为了照顾兼容性,低版本的浏览器,加上font-size:0; line-height:0;